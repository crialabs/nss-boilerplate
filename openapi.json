{
  "openapi": "3.0.0",
  "info": {
    "title": "CRAFTS API",
    "description": "API for CRAFTS (Configurable REST API For Triple Stores)",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/",
      "description": "Default server"
    }
  ],
  "paths": {
    "/apis": {
      "get": {
        "tags": ["api"],
        "summary": "Get the list of the configured APIs through CRAFTS",
        "operationId": "getApis",
        "responses": {
          "200": {
            "description": "A list of API summaries",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiSummary"
                  }
                },
                "example": [
                  {
                    "apiId": "educawood",
                    "url": "https://forestexplorer.gsic.uva.es/crafts/apis/educawood"
                  },
                  {
                    "apiId": "simanfor",
                    "url": "https://forestexplorer.gsic.uva.es/crafts/apis/simanfor"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/apis/{apiId}": {
      "get": {
        "tags": ["api"],
        "summary": "Get a configured API",
        "operationId": "getApi",
        "parameters": [
          {
            "name": "apiId",
            "in": "path",
            "description": "apiId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A configuration of an API",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Api"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "API not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["api"],
        "summary": "Update or create a configured API",
        "operationId": "updateApi",
        "parameters": [
          {
            "name": "apiId",
            "in": "path",
            "description": "apiId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The API configuration to create or update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Api"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "API updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "201": {
            "description": "API created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid API configuration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["api"],
        "summary": "Delete a configured API",
        "operationId": "deleteApi",
        "parameters": [
          {
            "name": "apiId",
            "in": "path",
            "description": "apiId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "API deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "API not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apis/{apiId}/dumps": {
      "get": {
        "tags": ["dump"],
        "summary": "Get the list of dumps of a CRAFTS API",
        "operationId": "getDumps",
        "parameters": [
          {
            "name": "apiId",
            "in": "path",
            "description": "apiId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of dump summaries",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "location": {
                        "type": "string"
                      },
                      "path": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": ["scheduled", "running", "completed", "failed"]
                      },
                      "config": {
                        "$ref": "#/components/schemas/DumpConfig"
                      },
                      "started": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "ended": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "API not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["dump"],
        "summary": "Create a dump of a CRAFTS API with config data",
        "operationId": "createDump",
        "parameters": [
          {
            "name": "apiId",
            "in": "path",
            "description": "apiId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The dump configuration",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DumpConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Dump creation request accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "API not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apis/{apiId}/query": {
      "get": {
        "tags": ["query"],
        "summary": "Send a parametrized query as configured in an API",
        "description": "This operation needs to reference a valid query template (parameter id) in the API. Note that a query template may define parameters (and some MAY BE REQUIRED). These parameters can be provided as query parameters in the URL",
        "operationId": "executeQuery",
        "parameters": [
          {
            "name": "apiId",
            "in": "path",
            "description": "The id of the API",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "display"
          },
          {
            "name": "id",
            "in": "query",
            "description": "The id of a query template element defined in the API",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "exhibitions"
          }
        ],
        "responses": {
          "200": {
            "description": "The answer to the submitted parametrized query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "head": {
                      "type": "object"
                    },
                    "results": {
                      "type": "object"
                    },
                    "query": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "API not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apis/{apiId}/resource": {
      "get": {
        "tags": ["resource"],
        "summary": "Get the data about a resource from a configured API",
        "operationId": "getResource",
        "parameters": [
          {
            "name": "apiId",
            "in": "path",
            "description": "The id of the API",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "display"
          },
          {
            "name": "id",
            "in": "query",
            "description": "The id of a model element defined in the API",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "exhibit"
          },
          {
            "name": "iri",
            "in": "query",
            "description": "The IRI of the resource",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uri"
            },
            "example": "iri"
          }
        ],
        "responses": {
          "200": {
            "description": "The data about a resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "API not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["resource"],
        "summary": "Create or replace a resource from a configured API",
        "operationId": "updateResource",
        "parameters": [
          {
            "name": "apiId",
            "in": "path",
            "description": "The id of the API",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "The id of a model element defined in the API",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "iri",
            "in": "query",
            "description": "The IRI of the resource",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          }
        ],
        "requestBody": {
          "description": "The data about the resource",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Resource replaced",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "201": {
            "description": "Resource created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "API not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["resource"],
        "summary": "Delete a resource from a configured API",
        "operationId": "deleteResource",
        "parameters": [
          {
            "name": "apiId",
            "in": "path",
            "description": "The id of the API",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "The id of a model element defined in the API",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "iri",
            "in": "query",
            "description": "The IRI of the resource",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "API not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["user"],
        "summary": "Get the list of CRAFTS users (requires root access)",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "The list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/UserData"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["user"],
        "summary": "Create a CRAFTS user",
        "operationId": "createUser",
        "requestBody": {
          "description": "User info to create the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/{login}/{actKey}": {
      "get": {
        "tags": ["user"],
        "summary": "Activate a CRAFTS user",
        "operationId": "activateUser",
        "parameters": [
          {
            "name": "login",
            "in": "path",
            "description": "login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "actKey",
            "in": "path",
            "description": "actKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User activated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid activation key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/{login}": {
      "get": {
        "tags": ["user"],
        "summary": "Get a CRAFTS user",
        "operationId": "getUser",
        "parameters": [
          {
            "name": "login",
            "in": "path",
            "description": "login",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserData"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["user"],
        "summary": "Update a CRAFTS user",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "login",
            "in": "path",
            "description": "login",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "User info to update the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["user"],
        "summary": "Delete a CRAFTS user",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "login",
            "in": "path",
            "description": "login",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "required": ["login", "password", "firstName", "lastName", "email"],
        "properties": {
          "login": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          }
        }
      },
      "UserData": {
        "type": "object",
        "required": ["login", "password", "email", "created", "apis"],
        "properties": {
          "login": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "activated": {
            "type": "string",
            "format": "date-time"
          },
          "activationKey": {
            "type": "string"
          },
          "apis": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "required": ["created", "readToken", "writeToken"],
              "properties": {
                "created": {
                  "type": "string",
                  "format": "date-time"
                },
                "readToken": {
                  "type": "string"
                },
                "writeToken": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "ApiSummary": {
        "type": "object",
        "required": ["apiId", "url"],
        "properties": {
          "apiId": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "Api": {
        "type": "object",
        "required": ["apiId", "endpoints", "model", "queryTemplates"],
        "properties": {
          "apiId": {
            "type": "string"
          },
          "endpoints": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["id", "sparqlURI"],
              "properties": {
                "id": {
                  "type": "string"
                },
                "sparqlURI": {
                  "type": "string",
                  "format": "uri"
                },
                "graphURI": {
                  "type": "string",
                  "format": "uri"
                },
                "httpMethod": {
                  "type": "string",
                  "enum": ["GET", "POST"]
                },
                "authInfo": {
                  "type": "object",
                  "required": ["user", "password", "type"],
                  "properties": {
                    "user": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": ["basic", "digest"]
                    }
                  }
                },
                "sparqlUpdate": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "sparqlURI": {
                      "type": "string",
                      "format": "uri"
                    },
                    "graphURI": {
                      "type": "string",
                      "format": "uri"
                    },
                    "httpMethod": {
                      "type": "string",
                      "enum": ["GET", "POST"]
                    },
                    "authInfo": {
                      "type": "object",
                      "required": ["user", "password", "type"],
                      "properties": {
                        "user": {
                          "type": "string"
                        },
                        "password": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": ["basic", "digest"]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "model": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["id", "types", "dprops", "oprops"],
              "properties": {
                "id": {
                  "type": "string"
                },
                "types": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": ["label", "endpoint"],
                    "properties": {
                      "label": {
                        "type": "string"
                      },
                      "endpoint": {
                        "type": "string"
                      },
                      "inferred": {
                        "type": "boolean"
                      },
                      "restrictions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "targetId": {
                        "type": "string"
                      },
                      "embed": {
                        "type": "boolean"
                      },
                      "writeonly": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                "dprops": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": ["label", "endpoint", "iri"],
                    "properties": {
                      "label": {
                        "type": "string"
                      },
                      "endpoint": {
                        "type": "string"
                      },
                      "iri": {
                        "type": "string",
                        "format": "uri"
                      },
                      "restrictions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "writeonly": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                "oprops": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": ["label", "endpoint", "iri"],
                    "properties": {
                      "label": {
                        "type": "string"
                      },
                      "endpoint": {
                        "type": "string"
                      },
                      "iri": {
                        "type": "string",
                        "format": "uri"
                      },
                      "inv": {
                        "type": "boolean"
                      },
                      "restrictions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "targetId": {
                        "type": "string"
                      },
                      "embed": {
                        "type": "boolean"
                      },
                      "writeonly": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          },
          "queryTemplates": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["id", "endpoint", "template", "variables", "parameters"],
              "properties": {
                "id": {
                  "type": "string"
                },
                "endpoint": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "template": {
                  "type": "string"
                },
                "variables": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "parameters": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": ["label", "type"],
                    "properties": {
                      "label": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": ["iri", "string", "number", "integer", "boolean"]
                      },
                      "optional": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "required": ["status", "message"],
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "DumpConfig": {
        "type": "object",
        "required": ["steps", "output"],
        "properties": {
          "parameters": {
            "type": "object",
            "description": "Parameters to be used in a step or an output element",
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              ]
            }
          },
          "steps": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["id", "type", "parameters"],
              "properties": {
                "id": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "enum": ["resource", "resources", "query"]
                },
                "parameters": {
                  "type": "object",
                  "description": "Check the API model and query templates to set valid parameters",
                  "additionalProperties": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "boolean"
                            }
                          ]
                        }
                      },
                      {
                        "$ref": "#/components/schemas/DumpConfigParameter"
                      },
                      {
                        "$ref": "#/components/schemas/DumpStepResult"
                      }
                    ]
                  }
                }
              }
            }
          },
          "output": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "DumpConfigParameter": {
        "type": "object",
        "description": "The key has to be defined in the parameters of the DumpConfig object",
        "required": ["source", "key"],
        "properties": {
          "source": {
            "type": "string",
            "enum": ["parameters"]
          },
          "key": {
            "type": "string"
          }
        }
      },
      "DumpStepResult": {
        "type": "object",
        "description": "The id corresponds to a previous step in the DumpConfig object. Steps of types resource or resource need a key to extract the values of the step results (check the corresponding model element of the API). Steps of type query need a variable to extract the values of the step results (check the corresponding query template of the API).",
        "required": ["source", "id"],
        "properties": {
          "source": {
            "type": "string",
            "enum": ["steps"]
          },
          "id": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "variable": {
            "type": "string"
          }
        }
      }
    }
  }
}
